{"version":3,"sources":["/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/$_lazy_route_resource lazy","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/app.component.html","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/app.component.ts","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/app.module.ts","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/azureblobviewer/azureblobviewer.component.css","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/azureblobviewer/azureblobviewer.component.html","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/azureblobviewer/azureblobviewer.component.ts","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/helpers/azureblob.pipe.ts","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/services/azureblob.service.ts","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/environments/environment.ts","/Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <app-azureblobviewer></app-azureblobviewer>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n  //template: `<h1>Hello Test Angular - {{name}}</h1>`\n})\n/*export class AppComponent implements OnInit {\n  name = 'This Message is from Test Angular index.html calling app.component.ts ';\n  title = 'Angular App Title';\n\n  //public title : String = 'Loading title...';\n  //public content : String = 'Loading content...';\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  ngOnInit() {\n  }\n}*/\n\nexport class AppComponent {\n  //title = 'Azure BlobViewer Application - Sample Title';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/app.component.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent }  from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule }   from '@angular/router';\nimport { AzureBlobViewerComponent } from './azureblobviewer/azureblobviewer.component';\nimport {KeysPipe} from './helpers/azureblob.pipe';\n\n@NgModule({\n  imports:      [ HttpClientModule, BrowserModule ],\n  declarations: [ AppComponent, AzureBlobViewerComponent, KeysPipe ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/azureblobviewer/azureblobviewer.component.css\n// module id = ../../../../../src/app/azureblobviewer/azureblobviewer.component.css\n// module chunks = main","module.exports = \"\\n<!--\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let key of blobsList | keys\\\">\\n    <p>\\n      <a target=\\\"_blank\\\" href=\\\"{{blobsList[key].blobURL}}\\\">\\n        <img src=\\\"{{blobsList[key].blobURL}}\\\" width=\\\"100px\\\" height=\\\"100px\\\" />\\n      </a>\\n    </p>\\n    <p><a class=\\\"btn btn-default\\\" href=\\\"#\\\">{{blobsList[key].blobName}}</a></p>\\n  </div>\\n</div>\\n-->\\n\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h2>Thumbnail imageBlobUrl</h2>\\n    <img [src]=\\\"imageBlobUrl\\\">\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/azureblobviewer/azureblobviewer.component.html\n// module id = ../../../../../src/app/azureblobviewer/azureblobviewer.component.html\n// module chunks = main","import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport {AzureblobService} from \"../services/azureblob.service\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-azureblobviewer',\n  templateUrl: './azureblobviewer.component.html',\n  styleUrls: ['./azureblobviewer.component.css'],\n  providers: [ AzureblobService]\n})\nexport class AzureBlobViewerComponent implements OnInit {\n\n  blobsList : any;\n  imageBlobUrl: string | null = null;\n  sanitizedImageBlobUrl: SafeUrl | null = null;\n\n  constructor(private azureblobService : AzureblobService,\n              private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.getAllBlobs();\n    this. getThumbnail();\n  }\n\n  getAllBlobs() : void {\n    this.azureblobService.getAllBlobs()\n      .subscribe(\n        (val) => {\n          this.blobsList = val; //<====== Set value here\n        },\n        response => {\n          console.log(\"POST - getAllBlobs in error\", response);\n        },\n        () => {\n          console.log(\"POST - getAllBlobs is now completed.\");\n        });\n  }\n\n  getThumbnail() : void {\n    this.azureblobService.getBlobThumbnail()\n      .subscribe(\n        (val) => {\n          console.log(\"POST - getThumbnail- successful value returned in body\", val);\n          //this.turl = val; //<====== Set value here\n          this.createImageFromBlob(val);\n        },\n        response => {\n          console.log(\"POST - getThumbnail - in error\", response);\n        },\n        () => {\n          console.log(\"POST - getThumbnail - observable is now completed.\");\n        });\n  }\n\n  createImageFromBlob(image: Blob) {\n    console.log(\"Call createImageFromBlob()\", image);\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      this.imageBlobUrl = reader.result;\n    }, false);\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/azureblobviewer/azureblobviewer.component.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys'\n})\nexport class KeysPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return Object.keys(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/helpers/azureblob.pipe.ts","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport { Azureblob } from '../models/azureblob';\nimport {environment} from \"../../environments/environment\";\n\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class AzureblobService {\n  constructor(private httpClient: HttpClient) { }\n\n  serverUrl : string = environment.BACKEND_URL + \"/service/blobservice/azure/fetch\";\n\n  thumbnailFetchUrl : string = \"https://southcentralus.api.cognitive.microsoft.com/vision/v2.0/generateThumbnail?width=100&height=100&smartCropp\";\n\n  value: any;\n\n  getAllBlobs() {\n    console.log(\"....AzureblobService.getAllBlobs()\");\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept' : 'application/json'\n    });\n\n    return this.httpClient.post<Azureblob[]>(this.serverUrl,\n      JSON.stringify({\n        \"azureAcountName\": \"acsazurestore\",\n        \"azureAcountKey\": \"qjC6s44AmSbAkJ7Xqdsks/jjZDIYRTY8qgWKds8w8PXdL+Q08mU/yu3Oh/4wO3sYTwNgNiA6EG66gBRWBqMBNA==\",\n        \"azureContainer\":\"acsazurecontainer\"\n      }),{headers: headers});\n  }\n\n  getBlobThumbnail(): Observable<Blob> {\n    console.log(\"....AzureblobService.getBlobThumbnail()\");\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Ocp-Apim-Subscription-Key': 'f78fdd51de304d99862c4a50c9a0ec0c'\n    });\n\n    return this.httpClient.post<Blob>(this.thumbnailFetchUrl,\n      {\n        \"url\": \"http://acsazurestore.blob.core.windows.net/acsazurecontainer/Git-Logo-1788C.png\"\n      }, {headers: headers, responseType: 'blob' as 'json' });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/app/services/azureblob.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  BACKEND_URL: window.location.protocol + '//' + window.location.hostname + ':' + 8080 + \"/jaqstack-azure-blobviewer\"\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule }              from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/konathal/Personal/SurenProjects/JAStack/gitnew/jaqstack/examples/azureblobviewer/ui.resources/src/main.ts"],"sourceRoot":"webpack:///"}